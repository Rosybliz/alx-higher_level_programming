--------------------------------------------------
This text file tests the ``add_integer()`` funtion
--------------------------------------------------
The ``add_integer()`` returns the addition of two numbers

::
    	>>> add_integer = __import__('0-add_integer').add_integer
    	>>> add_integer(2, 5)
    	7

add integer works for floats too but must convert to int first
it rounds it DOWN to the nearest integer before adding
::
    	>>> add_integer(2.7, 4)
    	6

it also works for negative numbers
::
	>>> add_integer(-7,5)
	-2
	>>> add_integer(-4, -4)
	-8
	>>> add_integer(-4, 4)
	0
	>>> add_integer(-3, 7)
	4
	>>> add_integer(1, 0)
	1
	>>> add_integer(0, -9)
	-9
	>>> add_integer(-13, 5.4)
	-8
	>>> add_integer(2.0, 4.0)
	6
	>>> add_integer(8)
	106

it fails if a non integer or non float value is passed
::
    	>>> add_integer(6, +)
    	Traceback (most recent call last):
    		...
    	SyntaxError: invalid syntax

it fails if a string is passed as any of the arguments
::
    	>>> add_integer("2", 8)
    	Traceback (most recent call last):
		...
    	TypeError: a must be an integer or b must be an integer

	>>> add_integer("2", "you")
	Traceback (most recent call last):
		...
    	TypeError: a must be an integer or b must be an integer

It also fails when None is passed as argument
::
    	>>> add_integer(None)
    	Traceback (most recent call last):
		...
    	TypeError: a must be an integer or b must be an integer

it also fails when no value is provided
::
	>>> add_integer()
	Traceback (most recent call last):
		...
    	TypeError: add_integer() missing 1 required positional argument: 'a'

